set(CMAKE_MODULE_PATH "/nfs/sw/modules/cmake/3.26.0")
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
set(cryptoTools_DIR "/gpfs/commons/groups/gursoy_lab/aychoi/eqtl/mpc/cryptoTools/cmake")
set(Eigen3_DIR "/gpfs/commons/groups/gursoy_lab/aychoi/sw/eigen-3.4.0/include")
set(NTL_DIR "/gpfs/commons/groups/gursoy_lab/aychoi/sw/NTL")
set(NTL_INCLUDE_DIR "${NTL_DIR}/include")
set(NTL_LIBRARY_DIR "${NTL_DIR}/lib")
set(NTL_LIBRARY "${NTL_LIBRARY_DIR}/libntl.a")
set(GMP_DIR "/gpfs/commons/groups/gursoy_lab/aychoi/sw/gmp-6.1.2")
set(GMP_INCLUDE_DIR "${GMP_DIR}/include")
set(GMP_LIBRARY_DIR "${GMP_DIR}/lib")
set(GMP_LIBRARY "${GMP_LIBRARY_DIR}/libgmp.a")
# set(RMATH "/gpfs/commons/groups/gursoy_lab/aychoi/sw/rmath")
set(RMATH_INCLUDE_DIR "/nfs/sw/R/R-4.2.1/lib64/R/include")
set(RMATH_LIBRARY "/gpfs/commons/groups/gursoy_lab/aychoi/sw/rmath/lib64/librmath.a")
set(GPERFTOOLS_DIR "/nfs/sw/gperftools/gperftools-2.5.91")
set(GPERFTOOLS_INCLUDE_DIR "${GPERFTOOLS_DIR}/include")
set(GPERFTOOLS_LIBRARY_DIR "${GPERFTOOLS_DIR}/lib")
set(GPERFTOOLS_LIBRARY "${GPERFTOOLS_LIBRARY_DIR}/libprofiler.a")
set(GSL_INCLUDE_DIR "/nfs/sw/gsl/gsl-2.6/include")
set(GSL_LIBRARY "/nfs/sw/gsl/gsl-2.6/lib/libgsl.a")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")
set(OpenBLAS_LIBRARY "/nfs/sw/openblas/openblas-0.2.19/libopenblas.a")
set(OpenMP_LIBRARY "/nfs/sw/openmp/openmp-9.0.1/lib/libgomp.so")
cmake_minimum_required(VERSION 3.18)

project(securesort)
set(CMAKE_CXX_COMPILER "/nfs/sw/gcc/gcc-11.2.0/bin/g++")
add_definitions(-DEIGEN_USE_BLAS)

add_executable(securesort utils.cpp sharing.cpp mpc.cpp input.cpp)
add_executable(scenario1 utils.cpp scenario1.cpp mpc.cpp input.cpp)
add_executable(parse parseoutput.cpp)
find_package(cryptoTools REQUIRED)
find_package(Eigen3 3.4 REQUIRED NO_MODULE)
find_package(OpenMP)
# find_package(OpenBLAS REQUIRED)
#link_directories(${NTL_LIBRARY_DIR} ${GMP_LIBRARY_DIR} ${GPERFTOOLS_LIBRARY_DIR})


target_include_directories(securesort PUBLIC ${NTL_INCLUDE_DIR} ${GMP_INCLUDE_DIR} ${GPERFTOOLS_INCLUDE_DIR} ${RMATH_INCLUDE_DIR} ${GSL_INCLUDE_DIR} ${Eigen3_DIR})
target_link_libraries(securesort PUBLIC oc::cryptoTools ${NTL_LIBRARY} ${GMP_LIBRARY} ${GPERFTOOLS_LIBRARY} ${RMATH_LIBRARY} ${GSL_LIBRARY} "/nfs/sw/gsl/gsl-2.6/lib/libgslcblas.a" Eigen3::Eigen ${OpenBLAS_LIBRARY} ${OpenMP_LIBRARY})
get_target_property(include_dirs securesort INCLUDE_DIRECTORIES)
target_include_directories(scenario1 PUBLIC ${NTL_INCLUDE_DIR} ${GMP_INCLUDE_DIR} ${GPERFTOOLS_INCLUDE_DIR} ${RMATH_INCLUDE_DIR} ${GSL_INCLUDE_DIR} ${Eigen3_DIR})
target_link_libraries(scenario1 PUBLIC oc::cryptoTools ${NTL_LIBRARY} ${GMP_LIBRARY} ${GPERFTOOLS_LIBRARY} ${RMATH_LIBRARY} ${GSL_LIBRARY} "/nfs/sw/gsl/gsl-2.6/lib/libgslcblas.a" Eigen3::Eigen ${OpenBLAS_LIBRARY} ${OpenMP_LIBRARY})
# get_target_property(include_dirs scenario1 INCLUDE_DIRECTORIES)
foreach(include_dir ${include_dirs})
    message("Include Directory: ${include_dir}")
endforeach()

if(OpenMP_CXX_FOUND)
    target_compile_options(securesort PRIVATE -fopenmp)
    target_compile_options(scenario1 PRIVATE -fopenmp)
endif()

target_compile_options(securesort PRIVATE -O3)
target_compile_options(scenario1 PRIVATE -O3)
target_compile_features(securesort PRIVATE cxx_std_14)
target_compile_features(scenario1 PRIVATE cxx_std_14)

